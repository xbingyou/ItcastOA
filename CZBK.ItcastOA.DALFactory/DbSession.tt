<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@
 output extension=".cs"#>
 
<#

CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string inputFile = @"..\\CZBK.ItcastOA.Model\\OracleModel.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>
using CZBK.ItcastOA.DAL;
using CZBK.ItcastOA.IDAL;
using CZBK.ItcastOA.Model;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CZBK.ItcastOA.DALFactory
{
	public partial class DBSession : IDBSession
    {
<#
// Emit Entity Types

foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{
    //fileManager.StartNewFile(entity.Name + "RepositoryExt.cs");
    //BeginNamespace(namespaceName, code);    
#>	
		private I<#=string.Concat(entity.Name.First<char>().ToString().ToUpper(),entity.Name.ToLower().Substring(1))#>Dal _<#=string.Concat(entity.Name.First<char>().ToString().ToUpper(),entity.Name.ToLower().Substring(1))#>Dal;
        public I<#=string.Concat(entity.Name.First<char>().ToString().ToUpper(),entity.Name.ToLower().Substring(1))#>Dal <#=string.Concat(entity.Name.First<char>().ToString().ToUpper(),entity.Name.ToLower().Substring(1))#>Dal
        {
            get
            {
                if(_<#=string.Concat(entity.Name.First<char>().ToString().ToUpper(),entity.Name.ToLower().Substring(1))#>Dal == null)
                {
                    _<#=string.Concat(entity.Name.First<char>().ToString().ToUpper(),entity.Name.ToLower().Substring(1))#>Dal = AbstractFactory.Create<#=string.Concat(entity.Name.First<char>().ToString().ToUpper(),entity.Name.ToLower().Substring(1))#>Dal();
                }
                return _<#=string.Concat(entity.Name.First<char>().ToString().ToUpper(),entity.Name.ToLower().Substring(1))#>Dal;
            }
            set { _<#=string.Concat(entity.Name.First<char>().ToString().ToUpper(),entity.Name.ToLower().Substring(1))#>Dal = value; }
        }
<#}#>
	}	
}